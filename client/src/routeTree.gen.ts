/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard'
import { Route as AuthenticatedCellsRouteImport } from './routes/_authenticated/cells'
import { Route as AuthenticatedGamesIdRouteImport } from './routes/_authenticated/games/$id'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedDashboardRoute = AuthenticatedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedCellsRoute = AuthenticatedCellsRouteImport.update({
  id: '/cells',
  path: '/cells',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedGamesIdRoute = AuthenticatedGamesIdRouteImport.update({
  id: '/games/$id',
  path: '/games/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cells': typeof AuthenticatedCellsRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/games/$id': typeof AuthenticatedGamesIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cells': typeof AuthenticatedCellsRoute
  '/dashboard': typeof AuthenticatedDashboardRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/games/$id': typeof AuthenticatedGamesIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/_authenticated/cells': typeof AuthenticatedCellsRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/_authenticated/games/$id': typeof AuthenticatedGamesIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/cells'
    | '/dashboard'
    | '/auth/callback'
    | '/games/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/cells' | '/dashboard' | '/auth/callback' | '/games/$id'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/_authenticated/cells'
    | '/_authenticated/dashboard'
    | '/auth/callback'
    | '/_authenticated/games/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/cells': {
      id: '/_authenticated/cells'
      path: '/cells'
      fullPath: '/cells'
      preLoaderRoute: typeof AuthenticatedCellsRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/games/$id': {
      id: '/_authenticated/games/$id'
      path: '/games/$id'
      fullPath: '/games/$id'
      preLoaderRoute: typeof AuthenticatedGamesIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedRouteChildren {
  AuthenticatedCellsRoute: typeof AuthenticatedCellsRoute
  AuthenticatedDashboardRoute: typeof AuthenticatedDashboardRoute
  AuthenticatedGamesIdRoute: typeof AuthenticatedGamesIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedCellsRoute: AuthenticatedCellsRoute,
  AuthenticatedDashboardRoute: AuthenticatedDashboardRoute,
  AuthenticatedGamesIdRoute: AuthenticatedGamesIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  AuthCallbackRoute: AuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
